// tslint:disable
/**
 * Version 1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    LoginRequest,
    UserInfo,
} from '../models';

export interface AuthLoginPostRequest {
    loginRequest: LoginRequest;
    useCookies?: boolean;
    useSessionCookies?: boolean;
}

/**
 * no description
 */
export class AuthenticationApi extends BaseAPI {

    /**
     */
    authLoginPost({ loginRequest, useCookies, useSessionCookies }: AuthLoginPostRequest): Observable<void>
    authLoginPost({ loginRequest, useCookies, useSessionCookies }: AuthLoginPostRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    authLoginPost({ loginRequest, useCookies, useSessionCookies }: AuthLoginPostRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(loginRequest, 'loginRequest', 'authLoginPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        const query: HttpQuery = {};

        if (useCookies != null) { query['useCookies'] = useCookies; }
        if (useSessionCookies != null) { query['useSessionCookies'] = useSessionCookies; }

        return this.request<void>({
            url: '/auth/login',
            method: 'POST',
            headers,
            query,
            body: loginRequest,
        }, opts?.responseOpts);
    };

    /**
     */
    authLogoutPost(): Observable<void>
    authLogoutPost(opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    authLogoutPost(opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        return this.request<void>({
            url: '/auth/logout',
            method: 'POST',
        }, opts?.responseOpts);
    };

    /**
     */
    authWhoamiGet(): Observable<UserInfo>
    authWhoamiGet(opts?: OperationOpts): Observable<AjaxResponse<UserInfo>>
    authWhoamiGet(opts?: OperationOpts): Observable<UserInfo | AjaxResponse<UserInfo>> {
        return this.request<UserInfo>({
            url: '/auth/whoami',
            method: 'GET',
        }, opts?.responseOpts);
    };

}
